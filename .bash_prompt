#!/bin/bash

# @gf3’s Sexy Bash Prompt, inspired by “Extravagant Zsh Prompt”
# Shamelessly copied from https://github.com/gf3/dotfiles

default_username='jakob'

# Fastest possible way to check if repo is dirty. a savior for the WebKit repo.
function parse_git_dirty() {
   git diff --quiet --ignore-submodules HEAD 2>/dev/null; [ $? -eq 1 ] && echo '*'
}

function parse_git_branch() {
    git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e "s/* \(.*\)/\1$(parse_git_dirty)/"
}

# Only show username/host if not default
function usernamehost() {
    if [ $USER != $default_username ]; then echo "${MAGENTA}$USER ${WHITE}at ${ORANGE}$HOSTNAME $WHITEin "; fi
}

# iTerm Tab and Title Customization and prompt customization
# http://sage.ucsc.edu/xtal/iterm_tab_customization.html

# Put the string " [bash]   hostname::/full/directory/path"
# in the title bar using the command sequence
# \[\e]2;[bash]   \h::\]$PWD\[\a\]

# Put the penultimate and current directory
# in the iterm tab
# \[\e]1;\]$(basename $(dirname $PWD))/\W\[\a\]

############################################
# Modified from emilis bash prompt script
# from https://github.com/emilis/emilis-config/blob/master/.bash_ps1
#
# Modified for Mac OS X by
# @corndogcomputer
###########################################
# (this is recalculated every time the prompt is shown in function prompt_command):
fill="--- "
 
# Prompt variable:
PS1='$fill \t\n'"\[\e]2;$PWD\[\a\]\[\e]1;\]$(basename "$(dirname "$PWD")")/\W\[\a\]${BOLD}\$(usernamehost)\[$GREEN\]\w\[$WHITE\]\$([[ -n \$(git branch 2> /dev/null) ]] && echo \" on \")\[$PURPLE\]\$(parse_git_branch)\[$WHITE\]\n\$ \[$RESET\]"
# Reset color for command output
# (this one is invoked every time before a command is executed):
trap 'echo -ne "${RESET}"' DEBUG
 
function make_line {
    # Is this a virtual env?
    if [ -z "$VIRTUAL_ENV" ]; then
        # No. HH:MM:SS + space = 9 chars
        prefix_length=9
        virtualenv_name=""
    else
        # Yes. Get length of virtualenv name + parenthesis + space + time
        virtualenv_name=$(basename $VIRTUAL_ENV);
        virtualenv_name_length=$(echo $virtualenv_name  | awk '{print length}');
        prefix_length=$((virtualenv_name_length + 12));
        virtualenv_name=" [${ORANGE}$virtualenv_name${RESET}]"
    fi
    # create a $fill of all screen width minus the time string and a space:
    let fillsize=${COLUMNS}-$prefix_length
    fill=$virtualenv_name
    while [ "$fillsize" -gt "0" ]
    do
        fill="-${fill}"
        let fillsize=${fillsize}-1
    done
}
 
PROMPT_COMMAND=make_line