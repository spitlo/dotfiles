#!/usr/bin/env bash
set -eu

# https://ubuntuforums.org/showthread.php?t=1505788
#
# Pass a file to mogrify, set quality to 1,
# but retain the timestamp to the nearest second.
#
# Parameters:
#    The input file and nothing else.
#
# Return codes:
#    100    No file input
#    101    The file does not exist or is not a regular file
#    102    Did not have permission to read the file
#    103    Did not have permission to modify the file
#    104    File is smaller than minimum size
#    Any other code: As returned by mogrify.
#
# Example use:
#    Shrink all files older than one year without changing the timestamp:
#    find ./media/images -xdev -name '*.jpg' -mtime +360 -execdir squash {} \;

# Find the last parameter.
FILENAME="${1:-__unset}"
MINIMUM_SIZE=${MINIMUM_SIZE:-80000}

# If no filename is provided, show help
if [[ ${FILENAME} == "__unset" ]]; then
  echo "Usage: squash FILENAME"
  echo "Pass a file to mogrify, set quality to one,"
  echo -e "but retail the timestamp to the nearest second.\n"
  echo "Usage examples:"
  echo "Shrink all files in a folder older than one year:"
  echo "find ./media/images -xdev -name '*.jpg' -mtime +360 -execdir squash {} \;"
  echo -e "\nCustom size limit:"
  echo "MINIMUM_SIZE=50000 find ./media/images -xdev -name '*.jpg' -execdir squash {} \;"
  exit 100
fi
# Check that the file exists and is readable and writeable.
if [[ ! -f ${FILENAME} ]]; then
  echo "The file does not exist or it is not a regular file:  ${FILENAME}" >&2
  exit 101
fi
if [[ ! -r ${FILENAME} ]]; then
  echo "I cannot read the file: ${FILENAME}" >&2
  exit 102
fi
if [[ ! -w ${FILENAME} ]]; then
  echo "I cannot modify the file: ${FILENAME}" >&2
  exit 103
fi
# File seems to exist. Now check size
INITIAL_SIZE=$(wc -c <"$FILENAME")
if [[ $INITIAL_SIZE -lt $MINIMUM_SIZE ]]; then
  # echo "The file: ${FILENAME} is smaller than the minimum size of $((MINIMUM_SIZE / 10**3)) kb." >&2
  exit 104
else
  echo "Squashing file ${FILENAME}."
fi

# Record the time stamp to the nearest second.
if [[ "$OSTYPE" =~ ^darwin ]]; then
  # Mac
  TIMESTAMP="$( stat -l -t '%Y%m%d%H%M.%S' "${FILENAME}" | cut  -d ' ' -f 6 )"
else
  # Linux
  TIMESTAMP="$( ls -l --time-style='+%Y%m%d%H%M.%S' "${FILENAME}" | cut  --delimiter=' ' --fields=6 )"
fi

# Squash the file. TODO: Fix this to handle files starting with -
mogrify -quality 1 "${FILENAME}"

RETURNCODE=${?}

# Reset the timestamp.
touch -t ${TIMESTAMP} "${FILENAME}"

# Check new size
SQUASHED_SIZE=$(wc -c <"$FILENAME")

# Check what we gained
SAVED_SIZE=$((INITIAL_SIZE - SQUASHED_SIZE))

if [[ $SAVED_SIZE -gt 0 ]]; then
  echo "Done! Saved $((SAVED_SIZE / 10**3)) kilobytes."
else
  echo "Done, but couldnâ€™t squash image harder."
fi

# Exit with the appropriate code.
exit ${RETURNCODE}
